Uso de polyfill de Intersection Observer e imports dinámicos

-Como intersectionObserver no tiene total soporte, usaremos un polyfill.
-Instalación: npm i intersection-observer.
-Como no queremos que el la dependencia se cargue siempre, sino que solo cuando se necesita, haremos un import
    dinamico.
-Para ello, usamos el metodo import('dependencia'). Esto devuelve una promesa, cuando se resuelva, colocamos
    dentro el código que había en el useEffect.
-Puede que nos pida usar un plugin de babel para usar intersection-observer, el plugin es: 
    @babel/plugin-syntax-dynamic-import, colocamos en la conf. de babel el elemento plugin y colocamos esto.

Hacer uso de ese import dinamico solo cuando el navegador no soporta IO:
    -Validaremos sí el typeof de window.intersectionObserver es distinto de undefined.
    -En caso de serlo, el navegador lo soporta, asi que retornamos window.intersectionObserver.
    -En caso contrario, hacemos el import dinamico.
    -El valor de esa validación lo obtenemos de forma asincrona.

-Nota: En caso de que el import de error, es por el linter, para ello, instalamos babel-eslint, en la conf. del
    eslint en el package, agregamos un elemento parser, con el babel-eslint como valor.