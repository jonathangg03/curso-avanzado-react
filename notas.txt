PWA: generando el manifest

-Haremos de la aplicación una PWA.
-Para conseguirlo 1ero debemos saber en que estado nos encontramos, y que es lo que nos falta para conseguirlo.
-Luego, usaremos algunos planes de webpack que nos facilitan su desarrollo.
-En este caso, aprenderemos a solucionar los problemas que le aparecieron al profesor:

Redireccionar el contenido cuando JS no este activado en el navegador:
    -En el html, colocamos antes de la etiqueta de cierre del body una etiqueta 'noscript'.
    -Esta renderizará lo que tenga internamente cuando el navegador no tenga el JS activado.

Añadir apple-touch:
    -Añadir esta etiqueta al head: <link rel="apple-touch-icon" href="/src/assets/icon.png">

Crear un manifest:
    -Instalamos como desarrollo webpack-pwa-manifest.
    -Lo importamos en la conf. de webpack, y path tambien.
    -Esta dependencia instalada será un plugin, por lo que lo que pondremos ahorá será la configuración:
        name: 'Petgram - Tu app de fotos de mascotas', // Nombre largo
        short_name: 'Petgram', //Nombre corto
        description: 'Con Petgram puedes encontrar fotos de animales domesticos muy facilmente',
        background_color: '#fff',// Color de fondo
        theme_color: '#b1a',// Color del tema
        icons: [// Resolvemos los iconos que necesitará la app
            {
                src: path.resolve('src/assets/icon.png'), // icono a resolver
                sizes: [96, 128, 192, 256, 384, 512], // tamaños en los que este puede estar (son tamaños que estan regularmente en moviles)
                purpose: 'maskable'
            }
        ]

-En el caso de los iconos, usamos una de las imagenes como ejemplo, pero puede ser cualquiera.